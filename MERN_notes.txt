Server request codes

  200 OK
  300 Multiple choices
  301 Moved Permanently
  302 Found
  304 Not modified 
  307 temporary Redirected
  400 Bad request
  401 Unauthorized
  403 Forbidden
  404 Not Found
  410 Gone
  422 unable to process the contained instructions
  500 Internal server error
  501 Not implemented
  503 service unavailable
  550 Permission denied

                                      BACKEND

Dependencies

  NodeJs       : https://nodejs.org/docs/latest-v10.x/api/
                                OR
                 https://nodejs.dev/learn/introduction-to-nodejs

  ExpressJs    : https://expressjs.com/en/4x/api.html#express

  body-parser  : https://www.npmjs.com/package/body-parser

  cookie-parser: https://www.npmjs.com/package/cookie-parser

  cors         : https://www.npmjs.com/package/cors

  jsonwebtoken : https://www.npmjs.com/package/jsonwebtoken

  express-jwt  : https://www.npmjs.com/package/express-jwt 

  mongoose     : https://mongoosejs.com/docs/guide.html

  mongodb      : https://docs.mongodb.com/manual/tutorial/getting-started/

  nodemon      : https://www.npmjs.com/package/nodemon

  uuid         : https://www.npmjs.com/package/uuid

  crypto       : https://nodejs.org/docs/latest-v10.x/api/crypto.html

  dotenv       : https://www.npmjs.com/package/dotenv

  express-validator: https://express-validator.github.io/docs/

  How tokens work : https://jwt.io/introduction

  



Database models

  created schema for user (models/user.js)
  read about crypto, mongoose virtual, uuid

  created schema for category (models/category.js)
  created schema for product i.e Tshirt (models/product.js)
  created schema for order and productInCart (models/order.js)
  connected mongoDB to application
  Created Environment variable file (.env)


Middlewares

  Read about body-parser, cookie-parser, cors.
  created routes/authentication.js
  created controllers/authentication.js (in which the functions are stored to be passed in routes/authentication.js)
  Saving a user to Database in (controllers/authentication.js)
  Read about express-validator
  Added validation in signup route (routes/authentication.js)
  Added Custom error message for validation in (controllers/authentication.js)

Tokens

  Read about jsonwebtoken, express-jwt, cookie-parser
  Created SECRET in .env
  Created controller for signin and signout
  Created controller for middleware to check if user is signed in (isSignedIn)
  Created controller for middleware to check for the authentication (isAuthenticated)
  Created controller for middleware to check for the Admin (isAdmin)
  Created signin route and test route
  
  
Params

  Created routes for user (routes/user.js)
  Created controllers for user (controllers/user.js)
  fixed bug in authentication.js (controllers/authentication.js)
  Created route to getUserById and update the user (routes/user.js)
  Created controllers getUserById ,getUser, updateUser (controllers/user.js)
  



